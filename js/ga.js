/*let geneList= [//2世代目以降
	[-32.49, -62.87, -82.11, -12.87, -42.55, -30.03, -19.16, -19.15, -78.97, 81.9],
	[0, 11, 12, 13, 14, 15, 16, 17, 18, 19],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
];*/

let geneList= [
    [-10, -10, -10, -10, -10, -10, -10, -10, -10, -10],
    [-20, -20, -20, -20, -20, -20, -20, -20, -20, -20],
    [-30, -30, -30, -30, -30, -30, -30, -30, -30, -30],
    [-40, -40, -40, -40, -40, -40, -40, -40, -40, -40],
    [-50, -50, -50, -50, -50, -50, -50, -50, -50, -50],
    [-60, -60, -60, -60, -60, -60, -60, -60, -60, -60],
    [-70, -70, -70, -70, -70, -70, -70, -70, -70, -70],
    [-80, -80, -80, -80, -80, -80, -80, -80, -80, -80],
    [-90, -90, -90, -90, -90, -90, -90, -90, -90, -90],
    [-100, -100, -100, -100, -100, -100, -100, -100, -100, -100],

    [-110, -110, -110, -110, -110, -110, -110, -110, -110, -110],
    [-120, -120, -120, -120, -120, -120, -120, -120, -120, -120],
    [-130, -130, -130, -130, -130, -130, -130, -130, -130, -130],
    [-140, -140, -140, -140, -140, -140, -140, -140, -140, -140],
    [-150, -150, -150, -150, -150, -150, -150, -150, -150, -150],
    [-160, -160, -160, -160, -160, -160, -160, -160, -160, -160],
    [-170, -170, -170, -170, -170, -170, -170, -170, -170, -170],
    [-180, -180, -180, -180, -180, -180, -180, -180, -180, -180],
    [-190, -190, -190, -190, -190, -190, -190, -190, -190, -190],
    [-200, -200, -200, -200, -200, -200, -200, 200, -200, -200],

    [-210, -210, -210, -210, -210, -210, -210, -210, -210, -210],
    [-220, -220, -220, -220, -220, -220, -220, -220, -220, -220],
    [-230, -230, -230, -230, -230, -230, -230, -230, -230, -230],
    [-240, -240, -240, -240, -240, -240, -240, -240, -240, -240],
    [-250, -250, -250, -250, -250, -250, -250, -250, -250, -250],
    [-260, -260, -260, -260, -260, -260, -260, -260, -260, -260],
    [-270, -270, -270, -270, -270, -270, -270, -270, -270, -270],
    [-280, -280, -280, -280, -280, -280, -280, -280, -280, -280],
    [-290, -290, -290, -290, -290, -290, -290, -290, -290, -290],
    [-300, -300, -300, -300, -300, -300, -300, -300, -300, -300]
];

let nextGeneList= [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],

    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],

    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
];

let i,j;
let cnt = 0;
let random;

function substitute(tmpCnt,i){
    for(j = 0; j < 10; j++){
        nextGeneList[tmpCnt][j] = geneList[i][j];
    }
    cnt++;
}

for(i = 0; i < 30; i++){
    random = 1 + Math.floor(Math.random() * 100);//1～100

    if(i >= 0 && i <= 2){//エリート保存
        substitute(cnt,i);

    //ランキング選択
    }else if(i >= 3 && i <= 5){//4～6位
        //console.log("4～6位",random)
        if(random <= 75){
            substitute(cnt,i);
        }
    }else if(i >= 6 && i <= 9){//7～10位
        //console.log("7～10位",random)
        if(random <= 50){
            substitute(cnt,i);
        }
    }else if(i >= 10 && i <= 14){//11～15位
        //console.log("11～15位",random)
        if(random <= 40){
            substitute(cnt,i);
        }
    }else if(i >= 15 && i <= 19){//16～20位
        //console.log("16～20位",random)
        if(random <= 30){
            substitute(cnt,i);
        }
    }else if(i >= 20 && i <= 29){//21～30位
        //console.log("21～30位",random)
        if(random <= 20){
            substitute(cnt,i);
        }
    }
    if(cnt >= 12){//ランキング選択の最大
        break;
    }
}

console.table(nextGeneList)

let list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29];
let tmpCnt = 0;

function shuffle(array){
    let i,j,tmp;
    for(i = 0;i < 30; i++){
        j = Math.floor(Math.random()*30);
        tmp = array[i];
        array[i] = array[j];
        array[j] = tmp;
    }
}

tmpCnt = cnt;

//一様交叉
for(i = tmpCnt; i < 30; i++){
    shuffle(list);
    gene1 = list[0];
    gene2 = list[1];

    console.log(cnt,list[0],list[1])

    for(j = 0; j < 10; j++){
        random = 1 + Math.floor(Math.random() * 2);//1～2
        if(random == 1){
            nextGeneList[cnt][j] = geneList[gene1][j];
        }else if(random == 2){
            nextGeneList[cnt][j] = geneList[gene2][j];
        }
    }
    cnt++;
}
console.table(nextGeneList)

//突然変異
for(i = 0; i < 30; i++){
    for(j = 0; j < 10; j++){
        random = 1 + Math.floor(Math.random() * 100);//1～100
        if(random == 1){
            console.log(i,j)
            nextGeneList[i][j] = (Math.round(Math.random() * 10000) / 100) * -1;
        }
    }

}

console.table(nextGeneList)